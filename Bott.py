import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.types import Message

API_TOKEN = "7817114744:AAEeo536wH19PNhaZd1ckcWHgP209EetvQA"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

users_data = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: Message):
    user_id = message.from_user.id
    if user_id not in users_data:
        users_data[user_id] = {"balance": 0, "runs": 0}

    await message.answer(
        "üë§ *–í–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:*\n\n"
        f"üí∞ –ë–∞–ª–∞–Ω—Å: {users_data[user_id]['balance']} RUB\n"
        f"‚ôª –ó–∞–ø—É—Å–∫–æ–≤: {users_data[user_id]['runs']}\n",
        parse_mode="Markdown"
    )

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WebApp (–º–∞–π–Ω–∏–Ω–≥–∞)
@dp.message(lambda message: message.text == "üåÄ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
async def mine(message: types.Message):
    webapp_button = InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            "üöÄ –ù–∞—á–∞—Ç—å –º–∞–π–Ω–∏–Ω–≥",
            web_app=WebAppInfo(url="https://127.0.0.1:5000.herokuapp.com")  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π URL
        )
    )
    await message.answer("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∞–π–Ω–∏–Ω–≥ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ!", reply_markup=webapp_button)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp
@dp.message(lambda message: message.web_app_data)
async def receive_data(message: Message):
    user_id = message.from_user.id
    data = message.web_app_data.data

    try:
        earned = int(eval(data).get("earned", 0))
        users_data[user_id]['balance'] += earned
        users_data[user_id]['runs'] += 1
        await message.answer(f"‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {earned} RUB!\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {users_data[user_id]['balance']} RUB")
    except:
        await message.answer("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö!")

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
